@using SoftrockDocsStagingModel;
@{
    var componentId=Request["id"].AsInt();
    var searchArg = Request["searchArg"];
    var db = new SoftrockDocsStagingEntities();
    Page.Title = "Edit Component";
    var component =
        (from c in db.Components
        where c.componentId==componentId
        select c).SingleOrDefault()
    ;
    //setup for Component Dropdown
    IEnumerable<SelectListItem> ddlComponentTypes = db.ComponentTypes
    .OrderBy(c => c.componentType1)
    .Select(c => new SelectListItem
    {
        Value = c.componentType1,
        Text = c.componentType1
    });
    var projects =
        (from b in component.BOMs
         select
         new { projectName = b.Project.projectName }).Distinct()
        ;

    
    var success=false;
    
    if (IsPost)
    {
        component.component1 = Request["component1"];
        component.componentType = Request["componentType"];
        component.category = Request["category"];
        component.numericValue = Request["numericValue"].AsFloat();
        component.marking = Request["marking"];
        component.photoLink = Request["photoLink"];
        component.notes = Request.Unvalidated("notes");
        component.datasheet = Request["datasheet"];
        component.esd = Request["esd"].AsBool();
        
        try
        {
            db.SaveChanges();
            success = true;
            Response.Redirect(Href("~/Components/Index?searchArg="+searchArg));
        }
        catch(Exception e)
        {
            <text>@e.Message </text>

        }
    }

    
}
<form method="post" action="">
@Html.Hidden("id",component.componentId)
@Html.Hidden("searchArg",searchArg)
<table>
<tr>
<td>Component</td><td>@Html.TextBox("component1",component.component1)</td>
</tr>
<tr>
<td>Type</td><td>
@Html.DropDownList("componentType","Select",ddlComponentTypes,component.componentType,new{@class="special"})
</td>
</tr>
<tr>
<td>Category</td><td>@Html.TextBox("category",component.category)</td>
</tr>
<tr>
<td>Marking</td><td>@Html.TextBox("marking",component.marking)</td>
</tr>
<tr>
<td>Value</td><td>@Html.TextBox("numericValue",component.numericValue)</td>
</tr>
<tr>
<td>Photo</td><td>@Html.TextBox("photoLink",component.photoLink)</td>
</tr>
<tr>
<td>ESD?</td><td>
    @Html.RadioButton("esd",component.esd,true)Yes
    @Html.RadioButton("esd",component.esd,false)No</td>
</tr>
<tr>
<td>DataSheet</td><td>@Html.TextBox("dataSheet",component.datasheet)</td>
</tr>
<tr>
<td>Notes</td><td>@Html.TextArea("notes",component.notes,new{cols=55, rows=5})</td>
</tr>
</table>

<input type="submit" value="Submit" name="submit" />
</form>
<h3>Used in Projects:</h3>
<table>
@foreach (var p in projects)
{
    <tr><td>@p.projectName</td></tr>
}
</table>
<a href="@Href("~/Components/Index?searchArg="+searchArg)">Return to Index</a>